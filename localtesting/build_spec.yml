version: 0.1
component: build
timeoutInSeconds: 3000
runAs: root
shell: bash
env:
  variables:
    "testEnv" : "testValue1"
  exportedVariables:
    - testEnv

# inputArtifacts:
#   - name: hello-dev-jar
#     location: ./hello123.class

steps:
  - type: Command
    name: "Build Source"
    timeoutInSeconds: 3000
    command: |
      echo $testEnv
      export testEnv=5.0
      echo OCI_STAGE_ID: $OCI_STAGE_ID
      echo OCI_PIPELINE_ID: $OCI_PIPELINE_ID
      echo OCI_BUILD_RUN_ID: $OCI_BUILD_RUN_ID
      echo OCI_TRIGGER_COMMIT_HASH: $OCI_TRIGGER_COMMIT_HASH
      echo OCI_TRIGGER_SOURCE_BRANCH_NAME: $OCI_TRIGGER_SOURCE_BRANCH_NAME
      echo OCI_TRIGGER_SOURCE_URL: $OCI_TRIGGER_SOURCE_URL
      echo OCI_TRIGGER_EVENT_TYPE: $OCI_TRIGGER_EVENT_TYPE
      echo OCI_PRIMARY_SOURCE_DIR: $OCI_PRIMARY_SOURCE_DIR
      echo OCI_WORKSPACE_DIR: $OCI_WORKSPACE_DIR
      echo OCI_BUILD_STAGE_NAME: $OCI_BUILD_STAGE_NAME
      echo OCI_PRIMARY_SOURCE_NAME: $OCI_PRIMARY_SOURCE_NAME
      export minor_version=135
      echo "=============================================="
      git branch
      df -h > output1.txt
      echo "commit7" > output.txt
      javac HelloWorld.java
      sleep 30s
    onFailure:
      - type: Command
        timeoutInSeconds: 400
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 400
        runAs: root
  - type: Command
    timeoutInSeconds: 400
    name: "Dockerizer & Test"
    command: |
      echo "WORKED....."
      sleep 60s
      docker build -t iad.ocir.io/id204we8d65n/balaregistry/hello-bala:1.0 .
      docker run iad.ocir.io/id204we8d65n/balaregistry/hello-bala:1.0
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 400
        runAs: root

outputArtifacts:
  - name: output1
    type: BINARY
    location: ${OCI_WORKSPACE_DIR}/githubExtConn/output1.txt
#   - name: output
#     type: BINARY
#     location: src/main/java/org/example/output.txt
#   - name: hello-dev-jar
#     type: BINARY
#     artifactParams:
#       testKey: testVal
#       testKey1: ${testEnv}
#       testKey2: ${invalidVar}
#     location: src/main/java/org/example/HelloWorld.class
  - name: hello-dev-image
    type: DOCKER_IMAGE
    location: iad.ocir.io/id204we8d65n/balaregistry/hello-bala:1.0
